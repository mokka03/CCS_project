{\rtf1\ansi\ansicpg1252\deff0\deflang1033
{\fonttbl
{\f0 Times New Roman}
{\f1 Symbol}
{\f2 Courier New}
}
{\colortbl
\red205\green205\blue205;
\red255\green0\blue0;
\red0\green0\blue0;
\red0\green128\blue128;
\red0\green0\blue255;
}
{\stylesheet
{\s0 \widctlpar}
{\s1\qr footer_header}
{\*\cs12\f2\fs24\cf1\i0 \b \ul0 \additive Maple Input}
{\*\cs13\f0\fs24\cf2\i0 \b0 \ul0 \additive 2D Math}
{\*\cs14\f0\fs24\cf3\i0 \b0 \ul \additive Hyperlink}
{\*\cs15\f0\fs24\cf4\i0 \b0 \ul0 \additive 2D Output}
{\*\cs16\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle256}
{\*\cs17\f0\fs40\cf2\i0 \b0 \ul0 \additive \shidden intstyle257}
{\*\cs18\f0\fs24\cf2\i0 \b0 \ul0 \additive \shidden intstyle258}
{\*\cs19\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle259}
{\*\cs20\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle260}
{\*\cs21\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle261}
{\*\cs22\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle262}
{\*\cs23\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle263}
{\*\cs24\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle264}
{\*\cs25\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle265}
{\*\cs26\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle266}
{\*\cs27\f0\fs40\cf2\i \b0 \ul0 \additive \shidden intstyle267}
{\*\cs28\f0\fs40\cf2\i0 \b0 \ul0 \additive \shidden intstyle268}
{\*\cs29\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle269}
{\*\cs30\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle270}
{\*\cs31\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle271}
{\*\cs32\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle272}
{\*\cs33\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle273}
{\*\cs34\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle274}
{\*\cs35\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle275}
{\*\cs36\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle276}
{\*\cs37\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle277}
{\*\cs38\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle278}
{\*\cs39\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle279}
{\*\cs40\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle280}
{\*\cs41\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle281}
{\*\cs42\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle282}
{\*\cs43\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle283}
{\*\cs44\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle284}
{\*\cs45\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle285}
{\*\cs46\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle286}
{\*\cs47\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle287}
{\*\cs48\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle288}
{\*\cs49\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle289}
{\*\cs50\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle290}
{\*\cs51\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle291}
{\*\cs52\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle292}
{\*\cs53\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle293}
{\*\cs54\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle294}
{\*\cs55\f0\fs24\cf2\i \b0 \ul0 \additive \shidden intstyle295}
{\*\cs56\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle296}
{\*\cs57\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle297}
{\*\cs58\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle298}
{\*\cs59\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle299}
{\*\cs60\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle300}
{\*\cs61\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle301}
{\*\cs62\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle302}
{\*\cs63\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle303}
{\*\cs64\f0\fs24\cf2\i0 \b \ul0 \additive \shidden intstyle304}
{\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 Normal
}
{\s66 \f0 \fs36 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa80\pagebb0 \li0\fi0\ri0 \snext66 Heading 1
}
{\s67 \f0 \fs28 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa40\pagebb0 \li0\fi0\ri0 \snext66 Heading 2
}
{\s68 \f0 \fs24 \cf2 \i0 \b0 \ul0 \qc \sl360 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 \snext66 Maple Output
}
{\s69 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl360 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 \snext66 Maple Output
}
{\s70 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb60\sa60\pagebb0 \jclisttab{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0 }\ls1\li360\fi-360\tx360\ri0 Bullet Item
}
{\s71 \f0 \fs36 \cf2 \i0 \b \ul \qc \sl240 \slmult1\sb240\sa240\pagebb0 \li0\fi0\ri0 Title
}
{\s72 \f0 \fs24 \cf2 \i0 \b0 \ul0 \qc \sl240 \slmult1\sb160\sa160\pagebb0 \li0\fi0\ri0 \snext66 Author
}
{\s73 \f0 \fs24 \cf2 \i0 \b0 \ul0 \qc \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 \snext66 Normal
}
{\s74 \f0 \fs20 \cf2 \i0 \b0 \ul0 \qc \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 \snext66 Normal
}
{\s75 \f0 \fs24 \cf2 \i \b0 \ul0 \qc \sl240 \slmult1\sb160\sa160\pagebb0 \li0\fi0\ri0 \snext66 Author
}
}
{\*\listtable{\list\listtemplateid1\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1
{\leveltext\'01\u-3913 ?;}{\levelnumbers;}\f1\fbias0 }{\listname ;}\listid1}{\list\listtemplateid2\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1
{\leveltext\'01-;}{\levelnumbers;}\f0\fbias0 }{\listname ;}\listid2}{\list\listtemplateid3\listsimple{\listlevel\levelnfc23\leveljc0\levelfollow0\levelstartat1
{\leveltext\'01 ;}{\levelnumbers;}\f0\fbias0 }{\listname ;}\listid3}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}
{\listoverride\listid3\listoverridecount0\ls3}}
{\info{\title quanser_tools.mws - [Server 1]}{\creatim\yr2003\mo3\dy3\hr9\min37
}}
{\pard\plain
\s71 \f0 \fs36 \cf2 \i0 \b \ul \qc \sl240 \slmult1\sb240\sa240\pagebb0 \li0\fi0\ri0 
{\cs17\f0\fs40\cf2\i0 \b0 \ul0 The 
}
{\cs27\f0\fs40\cf2\i \b0 \ul0 Quanser_Tools
}
{\cs28\f0\fs40\cf2\i0 \b0 \ul0  Package
}
\par}
{\pard\plain
\s75 \f0 \fs24 \cf2 \i \b0 \ul0 \qc \sl240 \slmult1\sb160\sa160\pagebb0 \li0\fi0\ri0 
{\cs16\f0\fs24\cf2\i \b0 \ul0 ©
}
{ 2003 Quanser Consulting Inc.
}
\par}
{\pard\plain
\s72 \f0 \fs24 \cf2 \i0 \b0 \ul0 \qc \sl240 \slmult1\sb160\sa160\pagebb0 \li0\fi0\ri0 
{\cs18\f0\fs24\cf2\i0 \b0 \ul0 URL: 
}
{\field{\*\fldinst { HYPERLINK "http://www.quanser.com"}}{\fldrslt 
{\cs14\f0\fs24\cf3\i0 \b0 \ul http://www.quanser.com
}
}}
\par}
{\pard\plain
\s74 \f0 \fs20 \cf2 \i0 \b0 \ul0 \qc \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{NOTE: This worksheet creates the 
}
{\cs29\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ package files, i.e. 
}
{\cs31\f0\fs24\cf2\i \b0 \ul0 quanser.ind
}
{, and 
}
{\cs30\f0\fs24\cf2\i \b0 \ul0 quanser.lib
}
\par}
{\pard\plain
\s66 \f0 \fs36 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa80\pagebb0 \li0\fi0\ri0 
{\*\bookstart Description}
{Description
}
{\*\bookend Description}
\par}
{\pard\plain
\s70 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb60\sa60\pagebb0 \jclisttab{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0 }\ls1\li360\fi-360\tx360\ri0 
{The 
}
{\cs32\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ package is created from the 
}
{\cs26\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ module.
}
\par}
{\pard\plain
\s70 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb60\sa60\pagebb0 \jclisttab{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0 }\ls1\li360\fi-360\tx360\ri0 
{The 
}
{\cs25\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ module defines generic procedures and data in relation to determining the stat
e-space representation of all Quanser experiments. Specifically, this means deri
ving and solving the Lagrange's equations of the system.
}
\par}
{\pard\plain
\s70 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb60\sa60\pagebb0 \jclisttab{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0 }\ls1\li360\fi-360\tx360\ri0 
{Executing this worksheet generates the 
}
{\cs36\f0\fs24\cf2\i \b0 \ul0 quanser
}
{ repository containing the 
}
{\cs35\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ package. The files 
}
{\cs37\f0\fs24\cf2\i \b0 \ul0 quanser.ind
}
{ and 
}
{\cs38\f0\fs24\cf2\i \b0 \ul0 quanser.lib
}
{ are saved in a temporary subdirectory, called 
}
{\cs39\f0\fs24\cf2\i \b0 \ul0 quanser_tmp_repo
}
{, of this worksheet's current location. The 
}
{\cs40\f0\fs24\cf2\i \b0 \ul0 quanser
}
{ repository can then be copied to a final destination for access. 
}
\par}
{\pard\plain
\s70 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb60\sa60\pagebb0 \jclisttab{\*\pn \pnlvlblt\ilvl0\ls1\pnrnot0 }\ls1\li360\fi-360\tx360\ri0 
{Please send your comments to: 
}
{\field{\*\fldinst { HYPERLINK "mailto:herve@quanser.com"}}{\fldrslt 
{\cs14\f0\fs24\cf3\i0 \b0 \ul herve@quanser.com
}
}}
{
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s66 \f0 \fs36 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa80\pagebb0 \li0\fi0\ri0 
{Initialization
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 restart:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 with( LinearAlgebra ):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s66 \f0 \fs36 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa80\pagebb0 \li0\fi0\ri0 
{The 
}
{\cs23\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ Module
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{The 
}
{\cs24\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ module defines the procedures related to the Quanser experiments.
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 Quanser_Tools := module( )\par
  export\par
    n_norm,\par
    moment_of_inertia,\par
    kinetic_energy, \par
    potential_energy, \par
    lagrange_equations,\par
    deriveF,\par
    deriveA,\par
    deriveB, \par
    write_ABCD_to_Mfile;\par
  option \par
    package, \par
    `Copyright (C) 2002 Quanser Consulting Inc.`;\par
  description \par
    "Support utilities to derive state-space representations.";\par
\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs56\f0\fs24\cf2\i0 \b \ul0 -> input parameters:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{X = set or list or table of elements (e.g. coordinates) to norm
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{n = n-Norm (e.g. if n = 2 : Euclidian norm)\par
}
{\cs57\f0\fs24\cf2\i0 \b \ul0 -> local variable:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{N = n-Norm value
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 n_norm := proc( X, n::integer )\par
  local N;\par
  description "Calculate the n-norm.";\par
  N := ( add( i^n, i=X ) )^( 1 / n );\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs58\f0\fs24\cf2\i0 \b \ul0 -> input parameters:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{shape = ; possible choices: 'cylinder', 'rect_bar'
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{axis = ; possible choices: 'longitudinal', 'ortho_middle'
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs59\f0\fs24\cf2\i0 \b \ul0 -> local variable:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{J = moment of inertia value (also the returned output)\par
M = mass
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{L = length
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{R = radius
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 moment_of_inertia := proc( shape, axis )\par
  local J, M, R, L;\par
  description "Calculate the moment of inertia.";\par
  M := args[3];\par
  if ( shape = 'cylinder' ) and ( axis = 'longitudinal' ) then\par
    R := args[4];\par
    J := M * R^2 / 2;\par
  elif ( shape = 'rect_bar' ) and ( axis = 'ortho_middle' ) then\par
    L := args[4];\par
    J := M * L^2 / 12;\par
  else \par
    error "wrong arguments: \\%1 and/or \\%2", shape, axis;\par
  end if;\par
  J;\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs51\f0\fs24\cf2\i0 \b \ul0 -> 2 valid formats:
}
{\par
i) 
}
{\cs52\f0\fs24\cf2\i \b0 \ul0 kinetic_energy( 'translation', m, v )   ---   
}
{(aka T_linear)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{ii) 
}
{\cs53\f0\fs24\cf2\i \b0 \ul0 kinetic_energy( 'rotation', J, w )   ---   
}
{(aka T_rotational)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs61\f0\fs24\cf2\i0 \b \ul0 -> input parameters
}
{:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{type = possible choices: 'translation' or 'rotation'
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{m = mass
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{v = linear velocity
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{J = moment of inertia
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{w = angular velocity
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 kinetic_energy := proc( )\par
  local T, type, m, v, J, w;\par
  description "Calculate kinetic energies: translation or rotation.";\par
  type := args[1];\par
  if ( nargs <> 3 ) then\par
      error "wrong argument of arguments: \\%1", nargs;\par
  else\par
    if ( type = 'translation' ) then\par
      m := args[2];\par
      v := args[3];\par
      T := 1/2 * m * v^2;\par
    elif ( type = 'rotation' ) then\par
      J := args[2];\par
      w := args[3];\par
      T := 1/2 * J * w^2;\par
    else \par
      error "wrong argument: \\%1", type;\par
    end if;\par
  end if;\par
  T;\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs50\f0\fs24\cf2\i0 \b \ul0 -> 2 valid formats:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{i) 
}
{\cs54\f0\fs24\cf2\i \b0 \ul0 potential_energy ( 'spring', k, dx )  ---  
}
{(aka V_elastic) 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{ii) 
}
{\cs55\f0\fs24\cf2\i \b0 \ul0 potential_energy ( 'gravity', m, g, dh )  ---  
}
{(aka V_gravity) 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs60\f0\fs24\cf2\i0 \b \ul0 -> input parameters
}
{:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{type = possible choices: 'spring' or 'gravity'
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{k = spring stiffness
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{dx = spring length variation
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{m = mass
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{g = gravitational acceleration
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{dh = high
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 potential_energy := proc( )\par
  local V, type, k, dx, m, g, dh;\par
  description "Calculate potential energies: spring or gravity.";\par
  type := args[1];\par
  if ( type = 'spring' ) then\par
    if ( nargs <> 3 ) then\par
      error "wrong argument of arguments: \\%1", nargs;\par
    else\par
      k := args[2];\par
      dx := args[3];\par
      V := 1/2 * k * dx^2;\par
    end if;\par
  elif ( type = 'gravity' ) then\par
    if ( nargs <> 4 ) then\par
      error "wrong argument of arguments: \\%1", nargs;\par
    else\par
      m := args[2];\par
      g := args[3];\par
      dh := args[4];\par
      V := m * g * dh;\par
    end if;\par
  else \par
    error "wrong argument: \\%1", type;\par
  end if;\par
  V;\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs19\f0\fs24\cf2\i0 \b \ul0 -> input parameters:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{T, V = total kinetic and potential energies, respectively, of the system
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{q = list containing the generalized coordinates chosen to describe the system
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{Q = list containing the generalized forces of the system
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs20\f0\fs24\cf2\i0 \b \ul0 -> output (returned):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{eom = list containing the Lagrange's equations (i.e. the equations of motion)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs21\f0\fs24\cf2\i0 \b \ul0 -> local variables:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{n = nb of DOF of the system
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{qd[i] = d/dt q[i]
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{L = Lagrangian of the system; Lq[i] = d/dq[i] L, Lqd[i] = d/dt (d/dqd[i] L)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{q_no_t[i], qd_no_t[i] = temporary variables\par
}
{\cs49\f0\fs24\cf2\i0 \b \ul0 -> global variable:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{t = external time variable
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 lagrange_equations := proc( T, V, q, Q )\par
  local n, i, q_no_t, qd, qd_no_t, L, Lq, Lqd, eom;\par
  global t;\par
  description "Calculate the Euler-Lagrange's equations.";\par
  n := nops( q );\par
  if n <> nops( Q ) then\par
    error "Inconsistent number of DOF, n: \\%1", n;\par
  end if;\par
  qd := map( diff, q, t );\par
  L := T - V;\par
  for i from 1 to n do \par
    Lq[i] := subs( q_no_t[i] = q[i], diff( subs( q[i] = q_no_t[i], L ), q_no_t[i
] ) );\par
    Lqd[i] := subs( qd_no_t[i] = qd[i], diff( subs( qd[i] = qd_no_t[i], L ), qd_
no_t[i] ) );\par
    eom[i] := simplify( diff( Lqd[i], t ) - Lq[i] ) = Q[i];\par
  end do;\par
  eom := [ seq( eom[i], i = 1..n ) ];\par
end proc;
}
{\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs62\f0\fs24\cf2\i0 \b \ul0 -> input parameters:\par
}
{F = inertia (a.k.a. mass) matrix, of size Nq-by-Nq\par
EOM_states = list of Euler-Lagrange's equations written in terms of the states\par
Nq = number of position states (which are also the lagrangian coordinates)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs63\f0\fs24\cf2\i0 \b \ul0 -> global variable:\par
}
{Xd = list representing the 2*Nq first states' first-time derivatives
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 deriveF := proc( F, EOM_states, Nq )\par
  local i, k;\par
  global Xd;\par
  description "Calculate the inertia matrix F.";\par
  for i from 1 to Nq do\par
    for k from 1 to Nq do\par
      F[ i, k ] := simplify( diff( op( 1, EOM_states[i] ), Xd[k+Nq] ) );\par
      F[ i, k ] := collect( combine( F[ i, k ], trig ), cos );\par
    end do;\par
  end do;\par
  F;\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs46\f0\fs24\cf2\i0 \b \ul0 -> input parameters:\par
}
{Xqdd = list of the position states' second-time derivatives written in terms of
 the states (i.e. state equations format)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{A = state-space matrix, of size Nx-by-Nx\par
Nq = number of position states (which are also the lagrangian coordinates)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{subs_XUlin = substitution set to linearize A around the quiescent point (e.g. z
ero)\par
}
{\cs47\f0\fs24\cf2\i0 \b \ul0 -> global variable:\par
}
{X = list representing the 2*Nq first states
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 deriveA := proc( Xqdd, A, Nq, subs_XUlin )\par
  local i, k;\par
  global X;\par
  description "Calculate the state-space matrix A.";\par
  for i from 1 to Nq do\par
    for k from 1 to 2*Nq do\par
      if k = ( i + Nq ) then\par
        A[ i, k ] := 1;\par
      else \par
        A[ i, k ] := 0;\par
      end if;\par
      A[ i+Nq, k ] := diff( Xqdd[i], X[k] );\par
      A[ i+Nq, k ] := simplify( subs( subs_XUlin, A[ i+Nq, k ] ) );\par
    end do;\par
  end do;\par
  A;\par
end proc;\par
}
{
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs45\f0\fs24\cf2\i0 \b \ul0 -> input parameters:\par
}
{Xqdd = list of the position states' second-time derivatives written in terms of
 the states (i.e. state equations format)
}
{\cs64\f0\fs24\cf2\i0 \b \ul0 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{B = state-space matrix, of size Nx-by-Nu
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{Nq = number of position states (which are also the lagrangian coordinates)\par
subs_XUlin = substitution set to linearize B around the quiescent point (e.g. ze
ro)
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs48\f0\fs24\cf2\i0 \b \ul0 -> global variable:\par
}
{U = list representing the inputs
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 deriveB := proc( Xqdd, B, Nq, subs_XUlin )\par
  local i, k, Nu;\par
  global U;\par
  description "Calculate the state-space matrix B.";\par
  Nu := ColumnDimension( B );\par
  for i from 1 to Nq do\par
    for k from 1 to Nu do\par
      B[ i, k ] := 0;\par
      B[ i+Nq, k ] := diff( Xqdd[i], U[k] );\par
      B[ i+Nq, k ] := simplify( subs( subs_XUlin, B[ i+Nq, k ] ) );\par
    end do;\par
  end do;\par
  B;\par
end proc;\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\cs22\f0\fs24\cf2\i0 \b \ul0 -> local variables:
}
{\par
Nx = number of states
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{Nu = number of inputs
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{Ny = number of outputs
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 write_ABCD_to_Mfile := proc( Matlab_File_Name, Exp
eriment_Name, Matlab_Notations, A, B, C, D )\par
  local fd, Matlab_Header, i, k, Nx, Nu, Ny;\par
  description "Write the state-space matrices to a M-file.";\par
  fd := fopen( Matlab_File_Name, WRITE ):\par
  Matlab_Header := cat( "% Matlab equation file: \\"", Matlab_File_Name, "\\"\\n
" ):\par
  Matlab_Header := cat( Matlab_Header, "% Open-Loop State-Space Matrices: A, B, 
C, and D\\n" ):\par
  Matlab_Header := cat( Matlab_Header, "% for the Quanser ", Experiment_Name, " 
Experiment.\\n" ):\par
  fprintf( fd, "%s", Matlab_Header ):\par
  Nx := RowDimension( A );\par
  if Nx <> ColumnDimension( A ) or Nx <> RowDimension( B ) or Nx <> ColumnDimens
ion( C ) then\par
    error "Inconsistent Nx dimension: \\%1", Nx;\par
  end if;\par
  Nu := ColumnDimension( B );\par
  if Nu <> ColumnDimension( D ) then\par
    error "Inconsistent Nu dimension: \\%1", Nu;\par
  end if;\par
  Ny := RowDimension( C );\par
  if Ny <> RowDimension( D ) then\par
    error "Inconsistent Ny dimension: \\%1", Ny;\par
  end if;\par
  fprintf( fd, "\\n" );\par
  for i from 1 to Nx do\par
    for k from 1 to Nx do\par
      fprintf( fd, "A( %d, %d ) = %A;\\n", i, k, subs( Matlab_Notations, simplif
y( A[ i, k ] ) ) );\par
    end do; \par
  end do:\par
  fprintf( fd, "\\n" );\par
  for i from 1 to Nx do\par
    for k from 1 to Nu do\par
      fprintf( fd, "B( %d, %d ) = %A;\\n", i, k, subs( Matlab_Notations, simplif
y( B[ i, k ] ) ) );\par
    end do;\par
  end do; \par
  fprintf( fd, "\\n" );\par
  for i from 1 to Ny do\par
    for k from 1 to Nx do\par
      fprintf( fd, "C( %d, %d ) = %A;\\n", i, k, subs( Matlab_Notations, simplif
y( C[ i, k ] ) ) );\par
    end do;\par
  end do; \par
  fprintf( fd, "\\n" );\par
  for i from 1 to Ny do\par
    for k from 1 to Nu do\par
      fprintf( fd, "D( %d, %d ) = %A;\\n", i, k, subs( Matlab_Notations, simplif
y( D[ i, k ] ) ) );\par
    end do;\par
  end do; \par
  fclose( fd );\par
end proc;\par
\par
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 end module;
}
\par}
{\pard\plain
\s69 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl360 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\pict \dn155 \picw12312 \pich2835\wmetafile8
010009000003C101000003002300000000000400000003010800050000000B020000000005000000
0C02130B1830050000002E0118000000050000000201010000000500000009020000FF001C000000
FB025CFE0000000000009001010000000400001254696D6573204E657720526F6D616E0053A8F477
5CA8F4770100000000003000040000002D0100000D00000021050D005175616E7365725F546F6F6C
7300460163001C000000FB025CFE0000000000005802000000000400001254696D6573204E657720
526F6D616E0053A8F4775CA8F4770100000000003000040000002D01010009000000210506006D6F
64756C654601F40C1C000000FB025CFE0000000000009001000000000400001254696D6573204E65
7720526F6D616E0053A8F4775CA8F4770100000000003000040000002D0102000700000021050100
280046012812070000002105010029004601B6120800000021050400203A3D204601AF0A04000000
2D01000009000000210506006E5F6E6F726D8F0350050F000000210511006D6F6D656E745F6F665F
696E6572746961008F03660B0D00000021050E006B696E657469635F656E657267798F03D9180E00
000021051000706F74656E7469616C5F656E657267798F035D23040000002D010200070000002105
01002C008F03840A07000000210501002C008F03F71707000000210501002C008F037B2207000000
210501002C008F037E2E040000002D01010009000000210506006578706F72748F03630004000000
2D0100000F000000210512006C616772616E67655F6571756174696F6E73D80563000A0000002105
07006465726976654603D805800E0A000000210507006465726976654103D8056C140A0000002105
07006465726976654203D805661A100000002105130077726974655F414243445F746F5F4D66696C
6500D8056020040000002D01020007000000210501002C00D8059E0D07000000210501002C00D805
8A1307000000210501002C00D805841907000000210501002C00D8057E1F07000000210501003B00
D805362F040000002D0101000C00000021050B006465736372697074696F6E752108630004000000
2D0102002300000021053A0022537570706F7274207574696C697469657320746F20646572697665
2073746174652D737061636520726570726573656E746174696F6E732E2221089408090000002105
0500202E2E2E20656A0A7B03030000000000
}
{\pict \dn27 \picw2324 \pich495\wmetafile8
0100090000035400000001001C00000000000400000003010800050000000B020000000005000000
0C02EF011409050000002E0118000000050000000201010000000500000009020000FF001C000000
FB025CFE0000000000005802000000000400001254696D6573204E657720526F6D616E0053A8F477
5CA8F4770100000000003000040000002D0100000B00000021050A00656E64206D6F64756C654601
6300030000000000
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s66 \f0 \fs36 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa80\pagebb0 \li0\fi0\ri0 
{Create the 
}
{\cs44\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ Repository
}
\par}
{\pard\plain
\s67 \f0 \fs28 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa40\pagebb0 \li0\fi0\ri0 
{Name Initialization
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 quanser_repo_list := [ "quanser.lib", "quanser.ind
" ];
}
\par}
{\pard\plain
\s68 \f0 \fs24 \cf2 \i0 \b0 \ul0 \qc \sl360 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\pict \dn7 \picw8956 \pich495\wmetafile8
010009000003B300000002001C00000000000400000003010800050000000B020000000005000000
0C02EF01FC22050000002E0118000000050000000201010000000500000009020000FF001C000000
FB025CFE0000000000009001000000000400001254696D6573204E657720526F6D616E0053A8F477
5CA8F4770100000000003000040000002D0100000800000021050400203A3D204601750C1C000000
FB025CFE0000000000009001010000000400001254696D6573204E657720526F6D616E0053A8F477
5CA8F4770100000000003000040000002D0101000F000000210511007175616E7365725F7265706F
5F6C6973740046016300040000002D01000007000000210501005B004601BA0E0700000021050100
5D004601FD2107000000210501002C004601F9170D00000021050D00227175616E7365722E6C6962
226C4601800F0D00000021050D00227175616E7365722E696E64226C4601DB18030000000000
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 startdir := currentdir( ):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{set a temporary archive path
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 quanser_repo_tmp_dir := cat( startdir, "/quanser_t
mp_repo" ):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 savelibname := quanser_repo_tmp_dir, ".":
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 libname := savelibname, libname:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s67 \f0 \fs28 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa40\pagebb0 \li0\fi0\ri0 
{Clean up previous module information from old files and directories
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 try currentdir( quanser_repo_tmp_dir ) catch: end 
try:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{remove repository files
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 try map( fremove, quanser_repo_list ) catch: end t
ry:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 currentdir( startdir ):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{delete temporary directory
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 try rmdir( quanser_repo_tmp_dir ) catch: end try:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s67 \f0 \fs28 \cf2 \i0 \b \ul0 \ql \sl240 \slmult1\sb160\sa40\pagebb0 \li0\fi0\ri0 
{Save updated module to new files
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{create temporary directory
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 try mkdir( quanser_repo_tmp_dir ) catch: end try:
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{creates the Maple 2 repository files: 
}
{\cs43\f0\fs24\cf2\i \b0 \ul0 .ind
}
{ and 
}
{\cs42\f0\fs24\cf2\i \b0 \ul0 .lib
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 march( 'create', cat( quanser_repo_tmp_dir, "/", q
uanser_repo_list[1] ), 20 );
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{save the 
}
{\cs41\f0\fs24\cf2\i \b0 \ul0 Quanser_Tools
}
{ module to the first repository found in the global variable 
}
{\cs33\f0\fs24\cf2\i \b0 \ul0 libname
}
{ or the repository named with the global variable 
}
{\cs34\f0\fs24\cf2\i \b0 \ul0 savelibname
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 savelib( 'Quanser_Tools' );
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 listrep := rep -> map2( op, 1, march( 'list', rep 
) ):
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 listrep( quanser_repo_tmp_dir );
}
\par}
{\pard\plain
\s69 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl360 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\pict \dn59 \picw14179 \pich1080\wmetafile8
010009000003FF00000001001C00000000000400000003010800050000000B020000000005000000
0C0238046337050000002E0118000000050000000201010000000500000009020000FF001C000000
FB025CFE0000000000009001000000000400001254696D6573204E657720526F6D616E0053A8F477
5CA8F4770100000000003000040000002D0100000A00000021050700223A2D362E6D220846012901
0A00000021050700223A2D392E6D22084601EA060A00000021050700223A2D332E6D22084601AB0C
0A00000021050700223A2D372E6D220846016C120A00000021050700223A2D312E6D220846012D18
0A00000021050700223A2D342E6D22084601EE1D0F00000021051100225175616E7365725F546F6F
6C732E6D22004601AF230A00000021050700223A2D382E6D22084601A23107000000210501002C00
4601080607000000210501002C004601C90B07000000210501002C0046018A110700000021050100
2C0046014B1707000000210501002C0046010C1D07000000210501002C004601CD22070000002105
01002C004601C03007000000210501002C004601813607000000210501005B00460163000A000000
21050700223A2D322E6D22088F0333030A00000021050700223A2D352E6D22088F03F40807000000
210501002C008F03120807000000210501005D008F030B0E030000000000
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
> 
{\cs12\f2\fs24\cf1\i0 \b \ul0 
}
\par}
{\pard\plain
\s65 \f0 \fs24 \cf2 \i0 \b0 \ul0 \ql \sl240 \slmult1\sb0\sa0\pagebb0 \li0\fi0\ri0 
{\field{\*\fldinst { HYPERLINK \\l "Description"}}{\fldrslt 
{\cs14\f0\fs24\cf3\i0 \b0 \ul Click here to go back to top: Description Section
}
}}
{.
}
\par}
}
